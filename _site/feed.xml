<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-09T13:24:00-03:00</updated><id>http://localhost:4000/</id><title type="html">Braço Pontilhismo</title><subtitle>Blog dedicado para documentar um projeto que estou desenvolvendo durante meu curso de Engenharia Elétrica na UFRN. A ideia principal do projeto é controlar um braço robótico, através de servo motores, para que consiga desenhar uma imagem qualquer dada através de uma técnica de desenho chamada de pontilhismo.</subtitle><entry><title type="html">Visão Geral</title><link href="http://localhost:4000/2018/10/14/Visao-Geral.html" rel="alternate" type="text/html" title="Visão Geral" /><published>2018-10-14T20:04:32-03:00</published><updated>2018-10-14T20:04:32-03:00</updated><id>http://localhost:4000/2018/10/14/Visao-Geral</id><content type="html" xml:base="http://localhost:4000/2018/10/14/Visao-Geral.html">&lt;h4 id=&quot;olá-leitor&quot;&gt;Olá leitor!&lt;/h4&gt;

&lt;p&gt;Neste post será mostrado a visão geral como é feito desde a imagem até a plotagem pelo braço robótico. Não será explicado em detalhes como foi feito, mas sim dará a ideia necessaria para reprodizuir o projeto.&lt;/p&gt;

&lt;h2 id=&quot;fluxograma&quot;&gt;Fluxograma&lt;/h2&gt;

&lt;p&gt;A figura abaixo mostra fluxograma do processo. Para ser mais didático a visão geral será dividido em duas partes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Processamento da imagem;&lt;/li&gt;
  &lt;li&gt;Controle mecânico.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/visao-geral/visao-geral-completa.svg&quot; alt=&quot;Visão Geral&quot; width=&quot;650&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;processamento-da-imagem&quot;&gt;Processamento da imagem&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/visao-geral/visao-geral1-2.svg&quot; alt=&quot;Processamento da imagem&quot; width=&quot;650&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Leitura da imagem em escala cinza:&lt;/strong&gt; por questão de praticidade foi escolhido trabalhar com imagens resultantes monocromáticas, por isso temos essa etapa no fluxograma;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Detecção de bordas:&lt;/strong&gt; é utilizado o Canny para detectar as bordas da imagem;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Aplicação do BSAS:&lt;/strong&gt; nesta etapa, se utiiza os pontos de borda do Canny como base de dado do BSAS. O que é retirado desse processamento é os centros dos &lt;em&gt;clusters&lt;/em&gt; achados pelo algorítimo. Também é utilizado um “rho”, distância mínima entre os &lt;em&gt;clusters&lt;/em&gt;, pequeno para dar um pouco mais de nítides nas bordas da imagem;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Aplicação do K-medias:&lt;/strong&gt; para dar um efeito de coloarção o histograma da foto é quantizado em &lt;em&gt;K&lt;/em&gt; tons, utilizado o algoritimo K-médias de cinza e depois a imagem é reconstruida com este novo histograma.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Aplicação do BSAS em cada centro do k-médias:&lt;/strong&gt; nesta etapa, se utiliza como base de dados para o BSAS os &lt;em&gt;K&lt;/em&gt; grupos retirado do K-médias. E o “rho” é definido através de uma função de primeiro grau, rho = A * Centro + B. Onde A e B são constantes definidas pelo usuário, e o Centro, é o ton de cinza que está sendo analisado. Resumindo, separo as &lt;em&gt;K&lt;/em&gt; amostras e vou pegando todos os pixels que pertence a cada ton desse, vou aplicando o BSAS e quanto mais escuro for o tom, menor vai ser o espaçamento entre os pontos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Junção dos 2 processamentos:&lt;/strong&gt; após os 2 processamentos no Canny e no K-médias é juntado todos os pixels em uma imagem só.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;controle-mecânico&quot;&gt;Controle mecânico&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/visao-geral/visao-geral2-2.svg&quot; alt=&quot;Controle mecânico&quot; width=&quot;650&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Antes de começar essa parte, deve-se mapear qual será os limites da imagem. Tipo, se queremos que a imagem seja desenhado num quadrado de 10cm por 10cm. Devemos dividir os 10cm pelo número de píxeis.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Leitura de pixel:&lt;/strong&gt; O programa vasculha a imagem pixel a pixel pŕocurando os pontos marcados, que no caso seria pontos pretos, 0 na escala cinza.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cinemática inversa:&lt;/strong&gt; Utilizando as coordenadas previamente mapeadas dos píxeis, pegamos a posição do píxel atual e aplicamos a cinemática inversa. Com isso, obtemos os ângulos necessário de cada junta para atingir tal posição.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Conversão dos angulos em PWM:&lt;/strong&gt; Foi criado uma equação para traduzir o ângulo dado em graus para a largura de pulso do PWM, &lt;a href=&quot;http://home.roboticlab.eu/pt/examples/motor/servo&quot;&gt;mais informações&lt;/a&gt;. Essa equação foi criada pegando 3 ângulos diferentes e montando uma parábola para conversão. Após a conversão é mandada o sinal de PWM para os servo motores.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pingar o píxel no papel:&lt;/strong&gt; Ao chegar na posição designada mandamos ele descer no eixo Z até chegar no papel e subir de volta pra posição anterior.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Acabou os píxeis da imagem?:&lt;/strong&gt; Nessa etapa ele verifica se este é o ultimo píxel da imagem. Caso não for, ele retorna a Leitura do próximo píxel e refaz todos esses passo. Caso seja o último píxel ele termina por aqui.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recapitulando, neste post foi descrito a visão geral do projeto. Desda parte de software, do processamento da imagem, até o controle mecânico do braço.&lt;/p&gt;

&lt;p&gt;Inté!&lt;/p&gt;</content><author><name></name></author><summary type="html">Olá leitor!</summary></entry><entry><title type="html">Introdução do projeto</title><link href="http://localhost:4000/2018/09/02/introducao-braco.html" rel="alternate" type="text/html" title="Introdução do projeto" /><published>2018-09-02T17:54:42-03:00</published><updated>2018-09-02T17:54:42-03:00</updated><id>http://localhost:4000/2018/09/02/introducao-braco</id><content type="html" xml:base="http://localhost:4000/2018/09/02/introducao-braco.html">&lt;h4 id=&quot;olá-leitor&quot;&gt;Olá leitor!&lt;/h4&gt;

&lt;p&gt;Este blog será dedicado para documentar um projeto que estou desenvolvendo durante o curso de Engenharia Elétrica na UFRN. A ideia principal é controlar um braço robótico, através de servo motores, para desenhar qualquer imagem utilizando a técnica de &lt;a href=&quot;https://pt.wikipedia.org/wiki/Pontilhismo&quot;&gt;pontilhismo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Imagem 1 - Exemplo da tecninca de pontilhismo
&lt;img src=&quot;/images/introducao-braco/Exemplo-pontilhismo.svg&quot; alt=&quot;Exemplo-pontilhismo&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fonte: LUCCAS BONATO, Pássaro&lt;/p&gt;

&lt;p&gt;É cada vez mais recorrente o uso de robôs que exercem atividades que geralmente são feitas por humanos. Este projeto tem fim acadêmico, porém, diversas aplicações podem ser geradas a partir desse trabalho, visto a gama de assuntos envolvidos na sua concepção.&lt;/p&gt;

&lt;p&gt;Um protótipo foi feito durante o curso de instrumentação eletrônica no pŕimeiro semestre de 2018. Como o blog será sobre a versão melhorada, o protótipo não será abordado tão detalhadamente.&lt;/p&gt;

&lt;h2 id=&quot;protótipo&quot;&gt;Protótipo&lt;/h2&gt;

&lt;p&gt;Imagem 2 - protótipo&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/introducao-braco/prototipo.svg&quot; alt=&quot;protótipo&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O protótipo foi construido apenas com &lt;a href=&quot;https://store.arduino.cc/usa/arduino-uno-rev3&quot;&gt;Arduino Uno&lt;/a&gt;, 4 servo motores TowerPro SG90 e sua estrutura em MDF. A estrutura em MDF é leve e facilita o controle dela pelos servo motores, pois eles têm baixo torque.&lt;/p&gt;

&lt;p&gt;A parte de processamento da imagem foi toda feita em &lt;a href=&quot;https://www.mathworks.com/products/matlab.html&quot;&gt;MATLAB&lt;/a&gt;. Pega-se a imagem, retira-se os pontos de borda da imagem utilizando  &lt;a href=&quot;https://pt.wikipedia.org/wiki/Detector_de_bordas_de_Canny&quot;&gt;Canny&lt;/a&gt; com o limiar(threshold) escolhido pelo usuário. A partir do resultado anterior é utilizado &lt;a href=&quot;http://cs.joensuu.fi/pages/oili/PR/?a=Some__Material&amp;amp;b=Sequential__Clustering/&quot;&gt;BSAS&lt;/a&gt; para dar o efeito de espaçamento dos pontos.&lt;/p&gt;

&lt;h4 id=&quot;bsas&quot;&gt;BSAS&lt;/h4&gt;

&lt;p&gt;&lt;i&gt;Basic Sequential Algorithmic Scheme&lt;/i&gt; é um algoritimo utilizado principalmente em agrupamento de dados. O algorítimo pode ser resumidamente descrito assim:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Escolhe-se um ponto aleatório dos dados para ser o lider do agrupamento;&lt;/li&gt;
  &lt;li&gt;Agrupa-se, numa mesma classe, todos os dados que estão próximos dele a uma distância ‘ρ’ escolhida préviamente;&lt;/li&gt;
  &lt;li&gt;Repete-se o passo dois para um novo lider, aleatóriamente escolhido, que não pertence a nenhuma classe até não haver mais nenhum dado sem classe.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Exemplo:&lt;/p&gt;

&lt;p&gt;Imagem 3 - Base de dados aleatóriamente gerada
&lt;img src=&quot;/images/introducao-braco/dados.svg&quot; alt=&quot;dados&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Imagem 4 - Dados agrupados com ρ=0.7
&lt;img src=&quot;/images/introducao-braco/BSASagrupados.svg&quot; alt=&quot;agrupados&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;processamento-da-imagem&quot;&gt;Processamento da imagem&lt;/h4&gt;

&lt;p&gt;O que foi utilizado no processamento foi a ideia do BSAS em separar dados de acordo com uma distância. Modificou-se o algoritimo para só memorizar a posição dos lideres, invés de agrupar. Com isso dando uma certa característica de pontilhismo.&lt;/p&gt;

&lt;p&gt;Imagem 5 - Imagem original&lt;br /&gt;
&lt;img src=&quot;/images/introducao-braco/original.svg&quot; alt=&quot;original&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Imagem 6 - Imagem processada&lt;br /&gt;
&lt;img src=&quot;/images/introducao-braco/bsas.svg&quot; alt=&quot;bsas&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;hardware&quot;&gt;Hardware&lt;/h4&gt;

&lt;p&gt;Há um problema na parte do hardware pois os servo motores só controlam ângulo dos elos. Então, calcula-se a cinemática inversa do braço e seus elos através da notação &lt;a href=&quot;https://pt.wikipedia.org/wiki/Par%C3%A2metros_de_Denavit-Hartenberg&quot;&gt;Denavit Hartenberg&lt;/a&gt; e simplificações algébricas. Com isso se tem controle sobre as coordenadas em XYZ invés de ângulos.&lt;/p&gt;

&lt;p&gt;E, por fim, como o pixel é adimensional tem que predefinir o que seria a distância entre um pixel e outro. Utilizou-se a propria bibliotéca do Arduino para controlar cada servo. Para criar o pingo, ou ponto, simplesmente move-se o braço para uma posição acima do papel sem toca-lo. Manda o braço descer, e depois voltar para a posição a cima dele. Repete-se esse movimento toda vez que na imagem processada tiver um pixel branco.&lt;/p&gt;

&lt;p&gt;Imagem 6 - Resultado&lt;br /&gt;
&lt;img src=&quot;/images/introducao-braco/resultado.svg&quot; alt=&quot;resultado&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O resultado foi aceitável para o que foi idealizado. Dá para reconhecer a imagem que foi processada. Porém, teve alguns obstáculos e não foram todos resolvidos. Como por exemplo, deslisamento da caneta quando vai criar o ponto. Pretendo resolver isso com sensor de distância nesta nova versão. Mas isso será assunto dos próximos posts.&lt;/p&gt;

&lt;p&gt;Inté!&lt;/p&gt;</content><author><name></name></author><summary type="html">Olá leitor!</summary></entry></feed>